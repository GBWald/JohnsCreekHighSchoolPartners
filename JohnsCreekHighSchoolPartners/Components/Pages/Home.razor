﻿@using System.Linq
@page "/"
@inject IPartnerRepository Repository
@inject NavigationManager Navigation
@rendermode InteractiveServer

<PageTitle>
    Partner List
</PageTitle>

<div class="top">
    <div class="search">
        <InputText placeholder="Search" @bind-Value="Searcher"></InputText>
        <button @onclick="FindStuff" class="btn btn-primary">Search</button>
    </div>

    <div class="sorter">
        <InputSelect @bind-Value="Sorter">
            <option value="" disabled selected>Sort by...</option>
            <option value="Id Decsending">Id Decsending</option>
            <option value="Id Acsending">Id Acsending</option>
        </InputSelect>
    </div>
</div>


<table class="table table-bordered table-striped">
    <thead class="table-dark">
        <tr>
            <th>Id</th>
            <th>Name</th>
            <th>Description</th>
            <th>SigningDate</th>
            <th>ClosingDate</th>
            <th>ContactPrimary</th>
            <th>ContactSecondary</th>
            <th>Category</th>
            <th>Actions</th>
        </tr>
    </thead>
    @if (partners is not null)
    {
        @if (partnersReverse is not null)
        {
            @if (Found)
            {
                @foreach (var partner in partners)
                {
                    @if (partner.Name == Searcher)
                    {
                        <tbody>
                            <tr>
                                <td>@partner.Id</td>
                                <td>@partner.Name</td>
                                <td>@partner.Description</td>
                                <td>@partner.SigningDate.ToString()</td>
                                <td>@partner.ClosingDate.ToString()</td>
                                <td>@partner.ContactPrimary</td>
                                <td>@partner.ContactSecondary</td>
                                <td>@partner.Category</td>
                                <td>
                                    <button class="btn btn-danger" @onclick="(() => DeletePartna(partner))">Delete</button>
                                    <a href="@($"/edit/{partner.Id}")" class="btn btn-warning">Edit</a>
                                </td>
                            </tr>
                        </tbody>
                    }
                    else
                    {
                        Found = false;
                    }
                }

            }
            else if (Sorter == "Id Decsending")
            {
                <tbody>
                    @foreach (var partner in partnersReverse)
                    {
                        <tr>
                            <td>@partner.Id</td>
                            <td>@partner.Name</td>
                            <td>@partner.Description</td>
                            <td>@partner.SigningDate.ToString()</td>
                            <td>@partner.ClosingDate.ToString()</td>
                            <td>@partner.ContactPrimary</td>
                            <td>@partner.ContactSecondary</td>
                            <td>@partner.Category</td>
                            <td>
                                <button class="btn btn-danger" @onclick="(() => DeletePartna(partner))">DeletePartna</button>
                                <a href="@($"/edit/{partner.Id}")" class="btn btn-warning">Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            }
            else
            {
                <tbody>
                    @foreach (var partner in partners)
                    {
                        <tr>
                            <td>@partner.Id</td>
                            <td>@partner.Name</td>
                            <td>@partner.Description</td>
                            <td>@partner.SigningDate.ToString()</td>
                            <td>@partner.ClosingDate.ToString()</td>
                            <td>@partner.ContactPrimary</td>
                            <td>@partner.ContactSecondary</td>
                            <td>@partner.Category</td>
                            <td>
                                <button class="btn btn-danger" @onclick="(() => DeletePartna(partner))">Delete</button>
                                <a href="@($"/edit/{partner.Id}")" class="btn btn-warning">Edit</a>
                            </td>
                        </tr>
                    }
                </tbody>
            }
        }
    }
</table>




@code {
    public string Sorter { get; set; } = string.Empty;

    public string Searcher { get; set; } = string.Empty;

    public bool Found { get; set; } = false;



    private List<Partner>? partners;
    private List<Partner>? partnersReverse;

    protected override async Task OnInitializedAsync()
    {
        partnersReverse = await Repository.GetAllReversed();
        partners = await Repository.GetAll();
    }

    private async Task DeletePartna(Partner partner)
    {
        await Repository.Delete(partner.Id);
        Navigation.NavigateTo("/", forceLoad: true);
    }

    public void FindStuff()
    {
        Found = true;
    }




}                       